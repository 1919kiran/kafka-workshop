# kafka-docker/docker-compose.yml
version: "3.7"
services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    image: wurstmeister/kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9093:9093"
    expose:
      - "9095"
      - "9096"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_LISTENERS: PLAINTEXT_OUTSIDE://0.0.0.0:9092,SSL_OUTSIDE://0.0.0.0:9093,PLAINTEXT_INSIDE://0.0.0.0:9095,SSL_INSIDE://0.0.0.0:9096
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT_OUTSIDE://localhost:9092,SSL_OUTSIDE://localhost:9093,PLAINTEXT_INSIDE://kafka:9095,SSL_INSIDE://kafka:9096
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT_OUTSIDE:PLAINTEXT,SSL_OUTSIDE:SSL,PLAINTEXT_INSIDE:PLAINTEXT,SSL_INSIDE:SSL
      KAFKA_INTER_BROKER_LISTENER_NAME: SSL_INSIDE

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "topic1:1:1,topic2:1:1"

      KAFKA_SSL_KEYSTORE_LOCATION: /tmp/server_keystores/kafka.server.keystore.jks
      KAFKA_SSL_KEYSTORE_PASSWORD: serversecret
      KAFKA_SSL_KEY_PASSWORD: serversecret
      KAFKA_SSL_TRUSTSTORE_PASSWORD: serversecret
      KAFKA_SSL_TRUSTSTORE_LOCATION: /tmp/server_keystores/kafka.server.truststore.jks
      KAFKA_SSL_CLIENT_AUTH: required
      KAFKA_SSL_ENDPOINT_IDENTIFICATION_ALGORITHM: ""

      ## Set this to true if ACLs are not needed
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "false"

      ## Ignore if ACLs are not needed
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      KAFKA_SUPER_USERS: "User:CN=localhost;User:CN=kafka"
      ## KAFKA_SSL_PRINCIPAL_MAPPING_RULEs: 'RULE:^CN=(.*?)/$1/L'

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /tmp/server_keystores:/tmp/server_keystores
  